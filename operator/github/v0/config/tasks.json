{
  "$defs": {
    "pull_request": {
      "description": "A pull request object.",
      "properties": {
        "id": {
          "description": "id of the PR",
          "instillFormat": "integer",
          "instillUIOrder": 1,
          "title": "PR id",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "integer"
        },
        "number": {
          "description": "number of the PR",
          "instillFormat": "integer",
          "instillUIOrder": 2,
          "title": "PR number",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "integer"
        },
        "state": {
          "description": "state of the PR",
          "instillFormat": "string",
          "instillUIOrder": 3,
          "title": "PR state",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "title": {
          "description": "Title of the PR",
          "instillFormat": "string",
          "instillUIOrder": 4,
          "title": "PR Title",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "body": {
          "description": "Body of the PR",
          "instillFormat": "string",
          "instillUIOrder": 5,
          "title": "PR body",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "diff_url": {
          "description": "url to the diff of the PR",
          "instillFormat": "string",
          "instillUIOrder": 6,
          "title": "PR diff url",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "head": {
          "description": "head commit of the PR (in SHA value)",
          "instillFormat": "string",
          "instillUIOrder": 8,
          "title": "PR head",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "base": {
          "description": "base commit of the PR (in SHA value)",
          "instillFormat": "string",
          "instillUIOrder": 9,
          "title": "PR base",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "comments_num": {
          "description": "number of comments on the PR",
          "instillFormat": "integer",
          "instillUIOrder": 10,
          "title": "Number of PR comments",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "integer"
        },
        "commits_num": {
          "description": "number of commits in the PR",
          "instillFormat": "integer",
          "instillUIOrder": 11,
          "title": "Number of PR commits",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "integer"
        },
        "review_comments_num": {
          "description": "number of review comments in the PR",
          "instillFormat": "integer",
          "instillUIOrder": 12,
          "title": "Number of PR review comments",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "integer"
        },
        "commits": {
          "description": "commits in the PR",
          "instillUIOrder": 13,
          "title": "Commits",
          "type": "array",
          "items": {
            "$ref": "#/$defs/commit",
            "required": [],
            "description": "A commit in the PR"
          }
        }
      },
      "title": "Pull Request",
      "type": "object"
    },
    "commit": {
      "description": "A commit object.",
      "properties": {
        "sha": {
          "description": "SHA of the commit",
          "instillUIOrder": 1,
          "title": "Commit SHA",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "message": {
          "description": "message of the commit",
          "instillUIOrder": 2,
          "title": "Commit message",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "stats": {
          "instillUIOrder": 3,
          "$ref": "#/$defs/commitStats",
          "required": []
        },
        "files": {
          "description": "files in the commit",
          "instillUIOrder": 4,
          "title": "Files",
          "type": "array",
          "items": {
            "$ref": "#/$defs/commitFile",
            "required": [],
            "description": "A file in the commit"
          }
        }
      },
      "required": [],
      "title": "Commit",
      "type": "object"
    },
    "commitStats": {
      "description": "stats of changes",
      "instillUIOrder": 1,
      "instillUpstreamTypes": [
        "value",
        "reference"
      ],
      "instillAcceptFormats": [
        "object"
      ],
      "instillFormat": "object",
      "title": "Commit stats",
      "type": "object",
      "properties": {
        "additions": {
          "description": "number of additions in the commit",
          "instillUIOrder": 1,
          "title": "Additions",
          "instillFormat": "integer",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "integer"
        },
        "deletions": {
          "description": "number of deletions in the commit",
          "instillUIOrder": 2,
          "title": "Deletions",
          "instillFormat": "integer",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "integer"
        },
        "changes": {
          "description": "total number of changes in the commit",
          "instillUIOrder": 3,
          "title": "Total changes",
          "instillFormat": "integer",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "integer"
        }
      },
      "required": []
    },
    "commitFile": {
      "description": "A commit file object.",
      "title": "Commit File",
      "properties": {
        "filename": {
          "description": "name of the file",
          "instillUIOrder": 1,
          "title": "File name",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "stats": {
          "instillUIOrder": 2,
          "$ref": "#/$defs/commitStats",
          "required": []
        },
        "patch": {
          "description": "patch of the file",
          "instillUIOrder": 3,
          "title": "Patch",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        }
      },
      "required": [],
      "type": "object",
      "instillAcceptFormats": [
        "object"
      ],
      "instillUpstreamTypes": [
        "value",
        "reference"
      ],
      "instillFormat": "object"
    },
    "repository_info": {
      "owner": {
        "description": "Owner of the repository",
        "instillAcceptFormats": [
          "string"
        ],
        "instillUIMultiline": false,
        "instillUIOrder": 0,
        "instillUpstreamTypes": [
          "value",
          "reference",
          "template"
        ],
        "title": "Owner",
        "type": "string"
      },
      "repository": {
        "description": "Repository name",
        "instillAcceptFormats": [
          "string"
        ],
        "instillUIMultiline": false,
        "instillUIOrder": 1,
        "instillUpstreamTypes": [
          "value",
          "reference",
          "template"
        ],
        "title": "Repository",
        "type": "string"
      }
    },
    "review_comments": {
      "description": "A review comment object.",
      "properties": {
        "id": {
          "description": "id of the comment",
          "instillUIOrder": 1,
          "title": "Comment id",
          "instillFormat": "integer",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "integer"
        },
        "in_reply_to_id": {
          "description": "id of the comment this comment is in reply to",
          "instillFormat": "integer",
          "instillUIOrder": 2,
          "title": "In Reply To",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "integer"
        },
        "commitId": {
          "description": "commit id (sha) of the comment",
          "instillFormat": "string",
          "instillUIOrder": 3,
          "title": "Commit id",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "body": {
          "description": "Body of the comment",
          "instillFormat": "string",
          "instillUIOrder": 4,
          "title": "Comment body",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "path": {
          "description": "path of the file the comment is on",
          "instillFormat": "string",
          "instillUIOrder": 5,
          "title": "Comment path",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "line": {
          "instillShortDescription": "The last line of the range that your comment applies to. Your comment will be placed under this line.",
          "description": "The line of the blob in the pull request diff that the comment applies to. For a multi-line comment, the last line of the range that your comment applies to.",
          "instillUIOrder": 6,
          "title": "Comment end line",
          "instillFormat": "integer",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "integer"
        },
        "start_line": {
          "description": "the first line in the pull request diff that your multi-line comment applies to",
          "instillUIOrder": 7,
          "title": "Comment start line",
          "instillFormat": "integer",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "integer"
        },
        "side": {
          "instillShortDescription": "side of the end line, can be one of: LEFT, RIGHT, side. Default is side",
          "description": "side of the end line, can be one of: LEFT, RIGHT, side. LEFT is the left side of the diff (deletion), RIGHT is the right side of the diff (addition), and side is the comment on the PR as a whole. Default is side",
          "default": "side",
          "enum": [
            "LEFT",
            "RIGHT",
            "side"
          ],
          "instillUIOrder": 8,
          "title": "Comment end side",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "start_side": {
          "instillShortDescription": "side of the start line, can be one of: LEFT, RIGHT, side. Default is side",
          "description": "side of the start line, can be one of: LEFT, RIGHT, side. LEFT is the left side of the diff (deletion), RIGHT is the right side of the diff (addition), and side is the comment on the PR as a whole. Default is side",
          "default": "side",
          "enum": [
            "LEFT",
            "RIGHT",
            "side"
          ],
          "instillUIOrder": 9,
          "title": "Comment start side",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "subject_type": {
          "description": "Subject type of the comment, can be one of: line, file. Default is line",
          "instillUIOrder": 10,
          "title": "Comment type",
          "instillFormat": "string",
          "default": "line",
          "enum": [
            "line",
            "file"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "created_at": {
          "description": "time the comment was created",
          "instillUIOrder": 11,
          "title": "Comment created at",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "updated_at": {
          "description": "time the comment was updated",
          "instillUIOrder": 12,
          "title": "Comment updated at",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "user": {
          "description": "User who created the comment",
          "instillUIOrder": 13,
          "title": "User",
          "type": "object",
          "properties": {
            "id": {
              "description": "id of the user",
              "instillUIOrder": 1,
              "title": "User id",
              "instillFormat": "integer",
              "instillAcceptFormats": [
                "integer"
              ],
              "instillUpstreamTypes": [
                "value",
                "reference"
              ],
              "type": "integer"
            },
            "url": {
              "description": "url of the user",
              "instillUIOrder": 2,
              "title": "User url",
              "instillFormat": "string",
              "instillAcceptFormats": [
                "string"
              ],
              "instillUpstreamTypes": [
                "value",
                "reference"
              ],
              "type": "string"
            }
          },
          "required": []
        }
      },
      "title": "Review Comment",
      "type": "object"
    },
    "issue": {
      "description": "An issue object.",
      "properties": {
        "number": {
          "description": "number of the issue",
          "instillUIOrder": 2,
          "title": "Issue number",
          "instillFormat": "integer",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "integer"
        },
        "state": {
          "description": "state of the issue",
          "instillUIOrder": 3,
          "title": "Issue state",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "title": {
          "description": "Title of the issue",
          "instillUIOrder": 4,
          "title": "Issue title",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "body": {
          "description": "Body of the issue",
          "instillUIOrder": 5,
          "title": "Issue body",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "assignee": {
          "description": "assignee of the issue",
          "instillUIOrder": 6,
          "title": "Assignee",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "string"
        },
        "assignees": {
          "description": "assignees of the issue",
          "instillUIOrder": 7,
          "title": "Assignees",
          "type": "array",
          "items": {
            "instillFormat": "string",
            "instillAcceptFormats": [
              "string"
            ],
            "instillUpstreamTypes": [
              "value",
              "reference"
            ],
            "type": "string"
          }
        },
        "labels": {
          "description": "labels of the issue",
          "instillUIOrder": 8,
          "title": "Labels",
          "type": "array",
          "items": {
            "instillFormat": "string",
            "instillAcceptFormats": [
              "string"
            ],
            "instillUpstreamTypes": [
              "value",
              "reference"
            ],
            "type": "string"
          }
        },
        "is_pull_request": {
          "description": "Whether the issue is a pull request",
          "instillUIOrder": 9,
          "title": "Is Pull Request",
          "instillFormat": "boolean",
          "instillAcceptFormats": [
            "boolean"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "type": "boolean"
        }
      },
      "title": "Issue",
      "type": "object"
    }
  },
  "TASK_GET_ALL_PULL_REQUESTS": {
    "instillShortDescription": "Get the list of all pull requests in a repository",
    "input": {
      "description": "Please input the repository name and owner",
      "instillUIOrder": 0,
      "instillEditOnNodeFields": [
        "owner",
        "repository"
      ],
      "properties": {
        "$ref": "#/$defs/repository_info",
        "state": {
          "default": "open",
          "title": "State",
          "description": "State of the PRs, including open, closed, all. Default is open",
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 10,
          "type": "string"
        },
        "sort": {
          "default": "created",
          "title": "Sort",
          "description": "Sort the PRs by created, updated, popularity, or long-running. Default is created",
          "enum": [
            "created",
            "updated",
            "popularity",
            "long-running"
          ],
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 11,
          "type": "string"
        },
        "direction": {
          "default": "desc",
          "title": "Direction",
          "description": "Direction of the sort, including asc or desc. Default is asc",
          "enum": [
            "asc",
            "desc"
          ],
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 12,
          "type": "string"
        }
      },
      "required": [
        "owner",
        "repository"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "All PRs in GitHub repository",
      "instillUIOrder": 0,
      "properties": {
        "pull_requests": {
          "description": "An array of PRs",
          "instillUIOrder": 1,
          "title": "Pull Requests",
          "type": "array",
          "items": {
            "$ref": "#/$defs/pull_request",
            "required": [],
            "description": "A pull request in GitHub"
          }
        }
      },
      "required": [
        "pull-requests"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_GET_PULL_REQUEST": {
    "instillShortDescription": "Get a pull request from a repository, given the PR number. This will default to the latest PR if no PR number is provided",
    "input": {
      "description": "Please input the repository name and owner, and the PR number",
      "instillUIOrder": 0,
      "instillEditOnNodeFields": [
        "owner",
        "repository",
        "pr_number"
      ],
      "properties": {
        "$ref": "#/$defs/repository_info",
        "pr_number": {
          "default": 0,
          "title": "PR Number",
          "description": "Number of the PR. `0` for the latest PR",
          "instillFormat": "integer",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 4,
          "type": "integer"
        }
      },
      "required": [
        "owner",
        "repository"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "The specific pr in GitHub repository",
      "instillUIOrder": 0,
      "properties": {
        "pull-request": {
          "$ref": "#/$defs/pull_request",
          "required": [],
          "instillUIOrder": 1,
          "description": "A pull request in GitHub"
        }
      },
      "required": [
        "pull-request"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_GET_REVIEW_COMMENTS": {
    "instillShortDescription": "Get the review comments in a pull request",
    "description": "Get the review comments in a pull request. The comments can be on a specific line or on the PR as a whole.",
    "input": {
      "description": "Please input the repository name and owner, and the PR number. Set PR number as`0` to get all comments on all PRs in the repository.",
      "instillUIOrder": 0,
      "instillEditOnNodeFields": [
        "owner",
        "repository",
        "pr_number"
      ],
      "properties": {
        "$ref": "#/$defs/repository_info",
        "pr_number": {
          "default": 0,
          "title": "PR Number",
          "description": "Number of the PR. Default is the latest PR",
          "instillFormat": "integer",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 4,
          "type": "integer"
        },
        "sort": {
          "default": "created",
          "title": "Sort",
          "description": "Sort the comments by created, updated. Default is created",
          "enum": [
            "created",
            "updated"
          ],
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 11,
          "type": "string"
        },
        "direction": {
          "default": "desc",
          "title": "Direction",
          "description": "Direction of the sort, including asc or desc. Default is asc",
          "enum": [
            "asc",
            "desc"
          ],
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 12,
          "type": "string"
        },
        "since": {
          "default": "2021-01-01T00:00:00Z",
          "title": "Since",
          "description": "Only comments updated at or after this time are returned. Default is 2021-01-01T00:00:00Z",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 13,
          "type": "string"
        }
      },
      "required": [
        "owner",
        "repository"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "Comments in the PR",
      "instillUIOrder": 0,
      "properties": {
        "comments": {
          "description": "An array of comments",
          "instillUIOrder": 0,
          "instillFormat": "object",
          "title": "Comments",
          "type": "array",
          "items": {
            "$ref": "#/$defs/review_comments",
            "required": [],
            "instillUIOrder": 1,
            "description": "Comments in the PR"
          }
        }
      },
      "required": [
        "comments"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_CREATE_REVIEW_COMMENT": {
    "instillShortDescription": "Create a review comment in pull request.",
    "description": "Create a review comment in a pull request. The comment can be a general comment or a review comment. The comment can be on a specific line or on the PR as a whole.",
    "input": {
      "description": "Please input the repository name and owner, and the PR number",
      "instillUIOrder": 0,
      "instillEditOnNodeFields": [
        "owner",
        "repository",
        "pr_number"
      ],
      "properties": {
        "$ref": "#/$defs/repository_info",
        "pr_number": {
          "default": 0,
          "title": "PR Number",
          "description": "Number of the PR. Default is the latest PR",
          "instillFormat": "integer",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 3,
          "type": "integer"
        },
        "comment": {
          "title": "Comment",
          "description": "The comment to be added",
          "instillFormat": "object",
          "instillUIOrder": 4,
          "type": "object",
          "properties": {
            "commit_id": {
              "$ref": "#/$defs/review_comments/properties/commitId",
              "instillUIOrder": 0
            },
            "body": {
              "$ref": "#/$defs/review_comments/properties/body",
              "instillUIOrder": 1
            },
            "path": {
              "$ref": "#/$defs/review_comments/properties/path",
              "instillUIOrder": 2
            },
            "line": {
              "$ref": "#/$defs/review_comments/properties/line",
              "instillUIOrder": 3
            },
            "start_line": {
              "$ref": "#/$defs/review_comments/properties/start_line",
              "instillUIOrder": 4
            },
            "side": {
              "$ref": "#/$defs/review_comments/properties/side",
              "instillUIOrder": 5
            },
            "start_side": {
              "$ref": "#/$defs/review_comments/properties/start_side",
              "instillUIOrder": 6
            },
            "subject_type": {
              "$ref": "#/$defs/review_comments/properties/subject_type",
              "instillUIOrder": 7
            }
          },
          "required": [
            "body",
            "path",
            "commit_id",
            "line",
            "start_line"
          ]
        }
      },
      "required": [
        "owner",
        "repository",
        "pr_number",
        "comment"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "The created comment",
      "instillUIOrder": 0,
      "properties": {
        "comment": {
          "$ref": "#/$defs/review_comments",
          "required": [],
          "instillUIOrder": 1,
          "description": "The created comment"
        }
      },
      "required": [
        "comment"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_GET_COMMIT": {
    "instillShortDescription": "Get a commit from a repository, given the commit SHA",
    "input": {
      "description": "Please input the repository name and owner, and the commit SHA",
      "instillUIOrder": 0,
      "instillEditOnNodeFields": [
        "owner",
        "repository",
        "sha"
      ],
      "properties": {
        "$ref": "#/$defs/repository_info",
        "sha": {
          "$ref": "#/$defs/commit/properties/sha",
          "instillUIOrder": 3
        }
      },
      "required": [
        "owner",
        "repository",
        "sha"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "The specific commit in GitHub repository",
      "instillUIOrder": 0,
      "properties": {
        "commit": {
          "$ref": "#/$defs/commit",
          "required": [],
          "instillUIOrder": 1,
          "description": "A commit in GitHub"
        }
      },
      "required": [
        "commit"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_GET_ALL_ISSUES": {
    "description": "Get the list of all issues in a repository,This can be a pull request or a general issue, and you can tell by the `is_pull_request` field.",
    "instillShortDescription": "Get the list of all issues in a repository",
    "input": {
      "description": "Please input the repository name and owner",
      "instillUIOrder": 0,
      "instillEditOnNodeFields": [
        "owner",
        "repository"
      ],
      "properties": {
        "$ref": "#/$defs/repository_info",
        "state": {
          "default": "open",
          "title": "State",
          "description": "State of the issues, including open, closed, all. Default is open",
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 10,
          "type": "string"
        },
        "sort": {
          "default": "created",
          "title": "Sort",
          "description": "Sort the issues by created, updated, popularity, or long-running. Default is created",
          "enum": [
            "created",
            "updated",
            "popularity",
            "long-running"
          ],
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 11,
          "type": "string"
        },
        "direction": {
          "default": "desc",
          "title": "Direction",
          "description": "Direction of the sort, including asc or desc. Default is asc",
          "enum": [
            "asc",
            "desc"
          ],
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 12,
          "type": "string"
        },
        "since": {
          "default": "2021-01-01T00:00:00Z",
          "title": "Since",
          "description": "Only issues updated at or after this time are returned. Default is 2021-01-01T00:00:00Z",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 13,
          "type": "string"
        },
        "no_pull_request": {
          "title": "No Pull Request",
          "description": "Whether to not include pull requests in the issues. Default is false",
          "instillFormat": "boolean",
          "instillAcceptFormats": [
            "boolean"
          ],
          "instillUpstreamTypes": [
            "value"
          ],
          "instillUIOrder": 14,
          "type": "boolean"
        }
      },
      "required": [
        "owner",
        "repository"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "All issues in GitHub repository",
      "instillUIOrder": 0,
      "properties": {
        "issues": {
          "description": "An array of issues",
          "instillUIOrder": 1,
          "title": "Issues",
          "type": "array",
          "items": {
            "$ref": "#/$defs/issue",
            "required": [],
            "description": "An issue in GitHub"
          }
        }
      },
      "required": [
        "issues"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_GET_ISSUE": {
    "description": "Get an issue. This can be a pull request or a general issue, and you can tell by the `is_pull_request` field.",
    "instillShortDescription": "Get an issue.",
    "input": {
      "description": "Please input the repository name and owner",
      "instillUIOrder": 0,
      "instillEditOnNodeFields": [
        "owner",
        "repository",
        "issue_number"
      ],
      "properties": {
        "$ref": "#/$defs/repository_info",
        "issue_number": {
          "default": 0,
          "title": "Issue Number",
          "description": "Number of the issue",
          "instillFormat": "integer",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 4,
          "type": "integer"
        }
      },
      "required": [
        "owner",
        "repository",
        "issue_number"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "The specific issue in GitHub repository",
      "instillUIOrder": 0,
      "properties": {
        "issue": {
          "description": "An issue in GitHub",
          "instillUIOrder": 1,
          "$ref": "#/$defs/issue",
          "title": "Issue",
          "required": []
        }
      },
      "required": [
        "issue"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_CREATE_ISSUE": {
    "description": "Create an issue",
    "input": {
      "description": "Please input the repository name and owner",
      "instillUIOrder": 0,
      "instillEditOnNodeFields": [
        "owner",
        "repository",
        "title",
        "body"
      ],
      "properties": {
        "$ref": "#/$defs/repository_info",
        "title": {
          "$ref": "#/$defs/issue/properties/title",
          "instillUIOrder": 3
        },
        "body": {
          "$ref": "#/$defs/issue/properties/body",
          "instillUIOrder": 4
        }
      },
      "required": [
        "owner",
        "repository",
        "title",
        "body"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "The created issue",
      "instillUIOrder": 0,
      "properties": {
        "issue": {
          "$ref": "#/$defs/issue",
          "required": [],
          "instillUIOrder": 1,
          "title": "Issue",
          "description": "The created issue"
        }
      },
      "required": [
        "issue"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_CREATE_WEBHOOK": {
    "description": "Create a webhook for a repository",
    "input": {
      "description": "Please input the repository name and owner",
      "instillUIOrder": 0,
      "instillEditOnNodeFields": [
        "owner",
        "repository",
        "hook_url",
        "events"
      ],
      "properties": {
        "$ref": "#/$defs/repository_info",
        "hook_url": {
          "title": "Webhook URL",
          "description": "URL to send the payload to",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 3,
          "type": "string"
        },
        "events": {
          "title": "Events",
          "description": "Events to trigger the webhook. Please see https://docs.github.com/en/webhooks/webhook-events-and-payloads for more information",
          "instillFormat": "array",
          "instillAcceptFormats": [
            "array"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "instillUIOrder": 4,
          "type": "array",
          "items": {
            "instillFormat": "string",
            "instillAcceptFormats": [
              "string"
            ],
            "instillUpstreamTypes": [
              "value",
              "reference"
            ],
            "type": "string"
          }
        },
        "active": {
          "title": "Active",
          "default": false,
          "description": "Whether the webhook is active. Default is false",
          "instillFormat": "boolean",
          "instillAcceptFormats": [
            "boolean"
          ],
          "instillUpstreamTypes": [
            "value"
          ],
          "instillUIOrder": 5,
          "type": "boolean"
        },
        "content_type": {
          "default": "json",
          "title": "Content Type",
          "description": "Content type of the webhook, can be one of: json, form. Default is json",
          "enum": [
            "json",
            "form"
          ],
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value"
          ],
          "instillUIOrder": 6,
          "type": "string"
        },
        "hook_secret": {
          "title": "Hook Secret",
          "description": "If provided, the secret will be used as the key to generate the HMAC hex digest value for delivery signature headers. (see https://docs.github.com/en/webhooks/webhook-events-and-payloads#delivery-headers)",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value"
          ],
          "instillUIOrder": 7,
          "type": "string"
        }
      },
      "required": [
        "owner",
        "repository",
        "hook_url",
        "events"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "The created webhook",
      "instillUIOrder": 0,
      "properties": {
        "hook": {
          "description": "The created webhook",
          "title": "Webhook",
          "instillUIOrder": 1,
          "type": "object",
          "properties": {
            "id": {
              "description": "id of the webhook",
              "instillUIOrder": 1,
              "title": "Webhook id",
              "instillFormat": "integer",
              "instillAcceptFormats": [
                "integer"
              ],
              "instillUpstreamTypes": [
                "value",
                "reference"
              ],
              "type": "integer"
            },
            "url": {
              "description": "url of the webhook",
              "instillUIOrder": 2,
              "title": "Webhook url",
              "instillFormat": "string",
              "instillAcceptFormats": [
                "string"
              ],
              "instillUpstreamTypes": [
                "value",
                "reference"
              ],
              "type": "string"
            },
            "ping_url": {
              "description": "url to ping the webhook",
              "instillUIOrder": 3,
              "title": "Ping url",
              "instillFormat": "string",
              "instillAcceptFormats": [
                "string"
              ],
              "instillUpstreamTypes": [
                "value",
                "reference"
              ],
              "type": "string"
            },
            "test_url": {
              "description": "url to test the webhook",
              "instillUIOrder": 4,
              "title": "Test url",
              "instillFormat": "string",
              "instillAcceptFormats": [
                "string"
              ],
              "instillUpstreamTypes": [
                "value",
                "reference"
              ],
              "type": "string"
            },
            "config": {
              "description": "Configuration of the webhook",
              "instillUIOrder": 6,
              "title": "Config",
              "type": "object",
              "properties": {
                "url": {
                  "description": "url of the webhook",
                  "instillUIOrder": 1,
                  "title": "Webhook url",
                  "instillFormat": "string",
                  "instillAcceptFormats": [
                    "string"
                  ],
                  "instillUpstreamTypes": [
                    "value",
                    "reference"
                  ],
                  "type": "string"
                },
                "content_type": {
                  "description": "Content type of the webhook",
                  "instillUIOrder": 2,
                  "title": "Content Type",
                  "instillFormat": "string",
                  "instillAcceptFormats": [
                    "string"
                  ],
                  "instillUpstreamTypes": [
                    "value"
                  ],
                  "type": "string"
                },
                "insecure_ssl": {
                  "description": "Whether the webhook is insecure",
                  "instillUIOrder": 3,
                  "title": "Insecure SSL",
                  "instillFormat": "string",
                  "instillAcceptFormats": [
                    "string"
                  ],
                  "instillUpstreamTypes": [
                    "value"
                  ],
                  "type": "string"
                }
              },
              "required": []
            }
          },
          "required": []
        }
      },
      "required": [
        "hook"
      ],
      "title": "Output",
      "type": "object"
    }
  }
}
